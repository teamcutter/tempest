// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: proto/sensor.proto

package sensorpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SensorData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Temperature   float64                `protobuf:"fixed64,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Humidity      float64                `protobuf:"fixed64,3,opt,name=humidity,proto3" json:"humidity,omitempty"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SensorData) Reset() {
	*x = SensorData{}
	mi := &file_proto_sensor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorData) ProtoMessage() {}

func (x *SensorData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sensor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorData.ProtoReflect.Descriptor instead.
func (*SensorData) Descriptor() ([]byte, []int) {
	return file_proto_sensor_proto_rawDescGZIP(), []int{0}
}

func (x *SensorData) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *SensorData) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *SensorData) GetHumidity() float64 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

func (x *SensorData) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type SensorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SensorResponse) Reset() {
	*x = SensorResponse{}
	mi := &file_proto_sensor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorResponse) ProtoMessage() {}

func (x *SensorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sensor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorResponse.ProtoReflect.Descriptor instead.
func (*SensorResponse) Descriptor() ([]byte, []int) {
	return file_proto_sensor_proto_rawDescGZIP(), []int{1}
}

func (x *SensorResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_proto_sensor_proto protoreflect.FileDescriptor

const file_proto_sensor_proto_rawDesc = "" +
	"\n" +
	"\x12proto/sensor.proto\x12\bsensorpb\"\x85\x01\n" +
	"\n" +
	"SensorData\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12 \n" +
	"\vtemperature\x18\x02 \x01(\x01R\vtemperature\x12\x1a\n" +
	"\bhumidity\x18\x03 \x01(\x01R\bhumidity\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\"(\n" +
	"\x0eSensorResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status2K\n" +
	"\rSensorService\x12:\n" +
	"\bSendData\x12\x14.sensorpb.SensorData\x1a\x18.sensorpb.SensorResponseB:Z8github.com/teamcutter/tempest/internal/sensorpb;sensorpbb\x06proto3"

var (
	file_proto_sensor_proto_rawDescOnce sync.Once
	file_proto_sensor_proto_rawDescData []byte
)

func file_proto_sensor_proto_rawDescGZIP() []byte {
	file_proto_sensor_proto_rawDescOnce.Do(func() {
		file_proto_sensor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_sensor_proto_rawDesc), len(file_proto_sensor_proto_rawDesc)))
	})
	return file_proto_sensor_proto_rawDescData
}

var file_proto_sensor_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_sensor_proto_goTypes = []any{
	(*SensorData)(nil),     // 0: sensorpb.SensorData
	(*SensorResponse)(nil), // 1: sensorpb.SensorResponse
}
var file_proto_sensor_proto_depIdxs = []int32{
	0, // 0: sensorpb.SensorService.SendData:input_type -> sensorpb.SensorData
	1, // 1: sensorpb.SensorService.SendData:output_type -> sensorpb.SensorResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_sensor_proto_init() }
func file_proto_sensor_proto_init() {
	if File_proto_sensor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_sensor_proto_rawDesc), len(file_proto_sensor_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_sensor_proto_goTypes,
		DependencyIndexes: file_proto_sensor_proto_depIdxs,
		MessageInfos:      file_proto_sensor_proto_msgTypes,
	}.Build()
	File_proto_sensor_proto = out.File
	file_proto_sensor_proto_goTypes = nil
	file_proto_sensor_proto_depIdxs = nil
}
